# database settings
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/xenecca
spring.datasource.username=xenecca_user
spring.datasource.password=z+/M><@KG(,$:B2XmW:U9>,zps(F4%K_
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa-generate-ddl=true
# NOTE: just for testing
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.hibernate.generate_statistics=true

# caching
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
#net.sf.ehcache.hibernate.EhCacheRegionFactory

spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
spring.jpa.hibernate.cache.use_query_cache=true
spring.cache.ehcache.config.classpath = ehcache.xml

# elastic search
logging.level.org.springframework.data.elasticsearch.core=DEBUG

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=30MB
# Max Request Size
spring.servlet.multipart.max-request-size=60MB

# logging
logging.file.name=api.log
logging.level.org.springframework.data.elasticsearch.core=debug
logging.level.root=warn
logging.level.org.springframework.web=debug
logging.level.org.hibernate=error
#logging.pattern.dateformat=yyyy-mm-dd HH:MM:ss
#logging.pattern.file= %d{yyyy-MM-dd } [%thread] %-5level %logger{36} - %msg%n
# Logging pattern for the console
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
# Logging pattern for file
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} - [%thread] - %-5level - %logger{36} - [MESSAGE] %msg%n --->

